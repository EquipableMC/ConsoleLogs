plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta4'
}

group = 'site.equipable'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://maven.enginehub.org/repo/' }
    maven { url = 'https://m2.dv8tion.net/releases' }
    maven { url = 'https://repo.skriptlang.org/releases' }
    maven { url = 'https://jcenter.bintray.com/' }
    maven { url = 'https://gradle.itsthesky.net/repository/DiSky/'}
}

dependencies {
    shadow 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'
    shadow 'com.github.SkriptLang:Skript:2.10.1'
    // Jetbrains Annotations
    shadow 'org.jetbrains:annotations:23.0.0'

    // Commits: com.github.dv8fromtheworld:jda
    // Stable: net.dv8tion:JDA
    shadow 'net.dv8tion:JDA:5.3.0'

    //shadow files('DiSky.jar')
    //shadow 'net.itsthesky:DiSky:4.21.1-SNAPSHOT'
    shadow 'net.itsthesky:DiSky:4.22.0-SNAPSHOT'

    //Apache Log4j
    shadow 'org.apache.logging.log4j:log4j-core:2.24.2'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('module.yml') {
        expand props
    }
}

shadowJar {
    archiveFileName.set("ConsoleLogs v" + version + ".jar")
}

compileJava.options.encoding = 'UTF-8'